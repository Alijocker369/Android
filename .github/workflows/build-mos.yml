name: Build MOS

on:
  push:

jobs:
  build:
    name: "MOS ${{matrix.target}} (${{matrix.build_type}}, Tests: ${{matrix.run_tests}})"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [multiboot, multiboot_iso]
        build_type: [Debug, RelWithDebInfo]
        run_tests: [ON, OFF]

        exclude:
          - target: multiboot_iso
            run_tests: ON
          - target: multiboot_iso
            build_type: Debug

    steps:
      - uses: actions/checkout@v3

      - name: Install packages
        run: |
          sudo apt update
          sudo apt -y install nasm grub2-common mtools jq ninja-build qemu-system-x86 cpio libgmp-dev libmpfr-dev libmpc-dev

      - name: Download & Extract Cross Compiler
        run: |
          wget -q "https://github.com/moodyhunter/i686-elf-prebuilt/releases/download/artifact/toolchain-i686-elf.tar.gz"
          tar -xzf toolchain-i686-elf.tar.gz
          mv toolchain /tmp/
          echo "PATH=$PATH:/tmp/toolchain/bin" >> $GITHUB_ENV

      - name: Configure CMake
        run: |
          cmake \
            -DCMAKE_BUILD_TYPE=${{matrix.build_type}} \
            -DMOS_MM_LIBALLOC_DEBUG=${{matrix.run_tests}} \
            -DMOS_DEBUG=${{matrix.run_tests}} \
            -B ${{github.workspace}}/build \
            -G Ninja

      - name: Get Bootable File
        id: get_bootable
        run: |
          export BOOTABLE=$(jq -r .${{matrix.target}} < ${{github.workspace}}/build/bootables.json)
          echo "BOOTABLE=$BOOTABLE" >> $GITHUB_ENV

      - name: Build
        run: |
          cd ${{github.workspace}}/build
          ninja
          ninja ${{matrix.target}}
          ../scripts/gen_initrd.sh

      - name: Upload Bootable Artifact
        if: matrix.run_tests == 'OFF'
        uses: actions/upload-artifact@v3
        with:
          name: MOS-${{matrix.target}}-${{matrix.build_type}}
          path: ${{env.BOOTABLE}}

      - name: Upload initrd
        if: matrix.run_tests == 'OFF'
        uses: actions/upload-artifact@v3
        with:
          name: MOS-${{matrix.target}}-${{matrix.build_type}}-initrd
          path: ${{github.workspace}}/build/initrd.cpio

      - name: Run Tests
        if: matrix.run_tests == 'ON'
        id: run_tests
        run: |
          cd ${{github.workspace}}/build
          cp ${{env.BOOTABLE}} test-failure.bin
          cp initrd.cpio test-failure-initrd.cpio
          ${{github.workspace}}/scripts/run_tests.sh

      - name: Upload Test Result
        if: matrix.run_tests == 'ON' && failure() && steps.run_tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: MOS-${{matrix.target}}-${{matrix.build_type}}-failures.zip
          path: ${{github.workspace}}/build/test-failure.*
