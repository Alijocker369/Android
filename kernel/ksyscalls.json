{
    "$schema": "../assets/syscalls.schema.json",
    "includes": [
        "mos/filesystem/fs_types.h",
        "mos/io/io_types.h",
        "mos/mm/heap_ops.h",
        "mos/mos_global.h",
        "mos/types.h"
    ],
    "syscalls": [
        {
            "number": 0,
            "name": "poweroff",
            "return": "void",
            "arguments": [ { "type": "bool", "arg": "reboot" }, { "type": "u32", "arg": "magic" } ]
        },
        {
            "number": 1,
            "name": "vfs_open",
            "return": "fd_t",
            "arguments": [ { "type": "const char *", "arg": "file_path" }, { "type": "open_flags", "arg": "flags" } ]
        },
        {
            "number": 2,
            "name": "vfs_statat",
            "return": "bool",
            "arguments": [ { "type": "fd_t", "arg": "dirfd" }, { "type": "const char *", "arg": "file_path" }, { "type": "file_stat_t *", "arg": "stat" } ]
        },
        {
            "number": 3,
            "name": "io_read",
            "return": "size_t",
            "arguments": [ { "type": "fd_t", "arg": "fd" }, { "type": "void *", "arg": "buffer" }, { "type": "size_t", "arg": "size" } ]
        },
        {
            "number": 4,
            "name": "io_write",
            "return": "size_t",
            "arguments": [ { "type": "fd_t", "arg": "fd" }, { "type": "const void *", "arg": "buffer" }, { "type": "size_t", "arg": "size" } ]
        },
        {
            "number": 5,
            "name": "io_close",
            "return": "bool",
            "arguments": [ { "type": "fd_t", "arg": "fd" } ]
        },
        {
            "number": 6,
            "name": "exit",
            "return": null,
            "arguments": [ { "type": "u32", "arg": "exit_code" } ]
        },
        {
            "number": 7,
            "name": "yield_cpu",
            "return": "void",
            "arguments": [ ]
        },
        {
            "number": 8,
            "name": "fork",
            "return": "pid_t",
            "arguments": [ ]
        },
        {
            "number": 9,
            "name": "exec",
            "return": "pid_t",
            "arguments": [ { "type": "const char *", "arg": "file_path" }, { "type": "const char *const *", "arg": "argv" } ]
        },
        {
            "number": 10,
            "name": "get_pid",
            "return": "pid_t",
            "arguments": [ ]
        },
        {
            "number": 11,
            "name": "get_parent_pid",
            "return": "pid_t",
            "arguments": [ ]
        },
        {
            "number": 12,
            "name": "spawn",
            "return": "pid_t",
            "arguments": [ { "type": "const char *", "arg": "file_path" }, { "type": "int", "arg": "argc" }, { "type": "const char *const *", "arg": "argv" } ]
        },
        {
            "number": 13,
            "name": "create_thread",
            "return": "tid_t",
            "arguments": [ { "type": "const char *", "arg": "name" }, { "type": "thread_entry_t", "arg": "entry" }, { "type": "void *", "arg": "arg" } ]
        },
        {
            "number": 14,
            "name": "get_tid",
            "return": "tid_t",
            "arguments": [ ]
        },
        {
            "number": 15,
            "name": "thread_exit",
            "return": null,
            "arguments": [ ]
        },
        {
            "number": 16,
            "name": "heap_control",
            "return": "ptr_t",
            "arguments": [ { "type": "heap_control_op", "arg": "op" }, { "type": "ptr_t", "arg": "arg" } ]
        },
        {
            "number": 17,
            "name": "wait_for_thread",
            "return": "bool",
            "arguments": [ { "type": "tid_t", "arg": "tid" } ]
        },
        {
            "number": 18,
            "name": "futex_wait",
            "return": "bool",
            "arguments": [ { "type": "futex_word_t *", "arg": "futex" }, { "type": "u32", "arg": "val" } ]
        },
        {
            "number": 19,
            "name": "futex_wake",
            "return": "bool",
            "arguments": [ { "type": "futex_word_t *", "arg": "futex" }, { "type": "size_t", "arg": "count" } ]
        },
        {
            "number": 20,
            "name": "ipc_create",
            "return": "fd_t",
            "arguments": [ { "type": "const char *", "arg": "name" }, { "type": "size_t", "arg": "max_pending_connections" } ]
        },
        {
            "number": 21,
            "name": "ipc_accept",
            "return": "fd_t",
            "arguments": [ { "type": "fd_t", "arg": "fd" } ]
        },
        {
            "number": 22,
            "name": "ipc_connect",
            "return": "fd_t",
            "arguments": [ { "type": "const char *", "arg": "name" }, { "type": "size_t", "arg": "buffer_size" } ]
        },
        {
            "number": 23,
            "name": "arch_syscall",
            "return": "u64",
            "arguments": [ { "type": "u64", "arg": "nr" }, { "type": "u64", "arg": "arg1" }, { "type": "u64", "arg": "arg2" }, { "type": "u64", "arg": "arg3" }, { "type": "u64", "arg": "arg4" } ],
            "comments": [
                "This syscall is used to implement architecture-specific syscalls.",
                "The first argument is the syscall number, and the remaining arguments",
                "are the arguments to the syscall."
            ]
        },
        {
            "number": 24,
            "name": "vfs_mount",
            "return": "bool",
            "arguments": [
                { "type": "const char *", "arg": "device" },
                { "type": "const char *", "arg": "mount_point" },
                { "type": "const char *", "arg": "fs_type" },
                { "type": "const char *", "arg": "options" }
            ]
        },
        {
            "number": 25,
            "name": "vfs_readlinkat",
            "return": "ssize_t",
            "arguments": [
                { "type": "fd_t", "arg": "dirfd" },
                { "type": "const char *", "arg": "path" },
                { "type": "char *", "arg": "buf" },
                { "type": "size_t", "arg": "buf_size" }
            ]
        },
        {
            "number": 26,
            "name": "vfs_touch",
            "return": "bool",
            "arguments": [ { "type": "const char *", "arg": "path" }, { "type": "file_type_t", "arg": "type" }, { "type": "u32", "arg": "mode" } ]
        },
        {
            "number": 27,
            "name": "vfs_symlink",
            "return": "bool",
            "arguments": [ { "type": "const char *", "arg": "link_path" }, { "type": "const char *", "arg": "target" } ]
        },
        {
            "number": 28,
            "name": "vfs_mkdir",
            "return": "bool",
            "arguments": [ { "type": "const char *", "arg": "path" } ]
        },
        {
            "number": 29,
            "name": "vfs_list_dir",
            "return": "size_t",
            "arguments": [ { "type": "fd_t", "arg": "fd" }, { "type": "char *", "arg": "buffer" }, { "type": "size_t", "arg": "buffer_size" } ]
        },
        {
            "number": 30,
            "name": "vfs_fstat",
            "return": "bool",
            "arguments": [ { "type": "fd_t", "arg": "fd" }, { "type": "file_stat_t *", "arg": "stat" } ]
        },
        {
            "number": 31,
            "name": "mmap_anonymous",
            "return": "void *",
            "arguments": [
                { "type": "ptr_t", "arg": "hint_addr" },
                { "type": "size_t", "arg": "size" },
                { "type": "mem_perm_t", "arg": "perm" },
                { "type": "mmap_flags_t", "arg": "flags" }
            ]
        },
        {
            "number": 32,
            "name": "mmap_file",
            "return": "void *",
            "arguments": [
                { "type": "ptr_t", "arg": "hint_addr" },
                { "type": "size_t", "arg": "size" },
                { "type": "mem_perm_t", "arg": "perm" },
                { "type": "mmap_flags_t", "arg": "flags" },
                { "type": "fd_t", "arg": "fd" },
                { "type": "off_t", "arg": "offset" }
            ]
        },
        {
            "number": 33,
            "name": "wait_for_process",
            "return": "bool",
            "arguments": [ { "type": "pid_t", "arg": "pid" } ]
        },
        {
            "number": 34,
            "name": "munmap",
            "return": "bool",
            "arguments": [ { "type": "void *", "arg": "addr" }, { "type": "size_t", "arg": "size" } ]
        },
        {
            "number": 35,
            "name": "vfs_chdir",
            "return": "bool",
            "arguments": [ { "type": "const char *", "arg": "path" } ]
        },
        {
            "number": 36,
            "name": "vfs_getcwd",
            "return": "ssize_t",
            "arguments": [ { "type": "char *", "arg": "buf" }, { "type": "size_t", "arg": "buf_size" } ]
        },
        {
            "number": 37,
            "name": "io_seek",
            "return": "off_t",
            "arguments": [ { "type": "fd_t", "arg": "fd" }, { "type": "off_t", "arg": "offset" }, { "type": "io_seek_whence_t", "arg": "whence" } ]
        },
        {
            "number": 38,
            "name": "io_tell",
            "return": "off_t",
            "arguments": [ { "type": "fd_t", "arg": "fd" } ]
        }
    ]
}
