name: Build MOS

on:
  push:
  workflow_dispatch:

jobs:
  build:
    name: "MOS ${{matrix.build_type}}, ${{matrix.config.name}}"
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]
        config:
          #   - {
          #       "name": "x86_64 UEFI (no SMP)",
          #       "arch": "x86_64",
          #       "target_triple": "x86_64-elf",
          #       "target": "mos_uefi_entry",
          #       "has_smp": "OFF",
          #       "compile_only": "ON", # we don't have a working platform support for now
          #     }
          #   - {
          #       "name": "x86_64 UEFI with SMP (1 core)",
          #       "arch": "x86_64",
          #       "target_triple": "x86_64-elf",
          #       "target": "mos_uefi_entry",
          #       "has_smp": "ON",
          #       "smp": "1",
          #       "compile_only": "ON",
          #     }
          - {
              "name": "x86_64 limine (no SMP)",
              "arch": "x86_64",
              "target_triple": "x86_64-elf",
              "target": "mos_limine",
              "has_smp": "n",
              "compile_only": "ON",
            }
          #   - {
          #       "name": "x86_64 limine with SMP (1 core)",
          #       "arch": "x86_64",
          #       "target_triple": "x86_64-elf",
          #       "target": "mos_limine",
          #       "has_smp": "y",
          #       "smp": "1",
          #       "compile_only": "ON",
          #     }

    env:
      MOS_TEST_SMP_COUNT: ${{matrix.config.smp}}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install packages
        run: |
          sudo apt update
          sudo apt -y install nasm grub2-common mtools jq ninja-build qemu-system-x86 gnu-efi cpio libgmp-dev libmpfr-dev libmpc-dev xorriso

      - name: Download & Extract Cross Compiler
        run: |
          wget -q "https://github.com/moodyhunter/mos-toolchain-prebuilt/releases/download/artifact/toolchain-${{matrix.config.target_triple}}.tar.gz"
          tar -xzf toolchain-${{matrix.config.target_triple}}.tar.gz
          mv toolchain /tmp/
          echo "PATH=$PATH:/tmp/toolchain/bin" >> $GITHUB_ENV

      - name: Install limine bootloader
        run: |
          wget 'https://github.com/limine-bootloader/limine/archive/refs/tags/v5.20230819.0-binary.zip'
          unzip ./v5.20230819.0-binary.zip
          cd limine-5.20230819.0-binary/
          make

      - name: Configure
        run: |
          cmake \
            -DLIMINE_ROOT=$(pwd)/limine-5.20230819.0-binary/ \
            -DCMAKE_BUILD_TYPE=${{matrix.build_type}} \
            -DMOS_CONFIG=${{matrix.config.arch}}-debug \
            -DMOS_ARCH=${{matrix.config.arch}} \
            -DMOS_SMP=${{matrix.config.has_smp}} \
            -B ${{github.workspace}}/build \
            -G Ninja

      - name: Build
        working-directory: ${{github.workspace}}/build
        run: |
          ninja ${{matrix.config.target}} mos_initrd

      - name: Upload Bootable Artifact
        uses: actions/upload-artifact@v3
        with:
          name: MOS-${{matrix.config.target}}-${{matrix.build_type}}
          path: ${{github.workspace}}/build/boot.dir/

      - name: Upload initrd
        uses: actions/upload-artifact@v3
        with:
          name: MOS-${{matrix.config.target}}-${{matrix.build_type}}-initrd
          path: ${{github.workspace}}/build/initrd.cpio

      - name: Run Tests (quiet)
        if: matrix.config.compile_only != 'ON'
        working-directory: ${{github.workspace}}/build
        run: |
          ${{github.workspace}}/scripts/run_tests.sh "mos_tests init_args='-c /initrd/assets/self-test.msh' quiet"

      - name: Run Tests (no debug messages)
        if: matrix.config.compile_only != 'ON'
        working-directory: ${{github.workspace}}/build
        run: |
          cmake . -DMOS_DEBUG_ALL=OFF
          ninja ${{matrix.config.target}} mos_initrd
          ${{github.workspace}}/scripts/run_tests.sh "mos_tests init_args='-c /initrd/assets/self-test.msh'"

      - name: Run Tests (LTO)
        if: matrix.config.compile_only != 'ON'
        working-directory: ${{github.workspace}}/build
        run: |
          cmake . -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON -DMOS_DEBUG_ALL=OFF
          ninja ${{matrix.config.target}} mos_initrd
          ${{github.workspace}}/scripts/run_tests.sh "mos_tests init_args='-c /initrd/assets/self-test.msh'"
